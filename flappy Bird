import pygame
import random

# Initialize pygame
pygame.init()

# Screen settings
SCREEN_WIDTH = 400
SCREEN_HEIGHT = 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption('Flappy Bird')

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)

# Game settings
GRAVITY = 0.5
BIRD_JUMP = -8
PIPE_WIDTH = 70
PIPE_HEIGHT = 500
PIPE_GAP = 150
PIPE_SPEED = 3

# Bird settings
bird_x = 50
bird_y = SCREEN_HEIGHT // 2
bird_width = 34
bird_height = 24
bird_velocity = 0

# Load bird image
bird_img = pygame.Surface((bird_width, bird_height))
bird_img.fill(GREEN)

# Pipe list
pipes = []

# Score
score = 0
font = pygame.font.SysFont(None, 40)

# Functions to display the score and end game message
def display_score(score):
    score_text = font.render("Score: " + str(score), True, BLACK)
    screen.blit(score_text, (10, 10))

def display_game_over():
    over_text = font.render("Game Over!", True, BLACK)
    screen.blit(over_text, (SCREEN_WIDTH // 4, SCREEN_HEIGHT // 3))

# Function to generate pipes
def create_pipe():
    pipe_x = SCREEN_WIDTH
    pipe_height = random.randint(200, 400)
    top_pipe = pygame.Rect(pipe_x, 0, PIPE_WIDTH, pipe_height - PIPE_GAP // 2)
    bottom_pipe = pygame.Rect(pipe_x, pipe_height + PIPE_GAP // 2, PIPE_WIDTH, SCREEN_HEIGHT - pipe_height)
    return top_pipe, bottom_pipe

# Main game loop
def game_loop():
    global bird_y, bird_velocity, score
    clock = pygame.time.Clock()
    running = True
    game_over = False

    # Initial pipes
    pipes.append(create_pipe())

    while running:
        screen.fill(WHITE)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == pygame.KEYDOWN and not game_over:
                if event.key == pygame.K_SPACE:
                    bird_velocity = BIRD_JUMP

        # Update bird position
        if not game_over:
            bird_velocity += GRAVITY
            bird_y += bird_velocity

        # Draw bird
        bird_rect = pygame.Rect(bird_x, bird_y, bird_width, bird_height)
        screen.blit(bird_img, (bird_x, bird_y))

        # Pipe movement and generation
        if not game_over:
            for pipe in pipes:
                pipe[0].x -= PIPE_SPEED
                pipe[1].x -= PIPE_SPEED

            # Check if the pipes have moved off screen
            if pipes[0][0].x < -PIPE_WIDTH:
                pipes.pop(0)
                pipes.append(create_pipe())
                score += 1

        # Draw pipes
        for pipe in pipes:
            pygame.draw.rect(screen, GREEN, pipe[0])
            pygame.draw.rect(screen, GREEN, pipe[1])

        # Check for collisions
        for pipe in pipes:
            if bird_rect.colliderect(pipe[0]) or bird_rect.colliderect(pipe[1]) or bird_y > SCREEN_HEIGHT - bird_height or bird_y < 0:
                game_over = True

        # Display score
        display_score(score)

        if game_over:
            display_game_over()

        pygame.display.update()
        clock.tick(30)

    pygame.quit()

# Start the game
game_loop()
